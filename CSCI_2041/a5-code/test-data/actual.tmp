calculon> if true then if false then 1 else 2 else 3;
ERROR: I'm not familiar with the type of thing I'm seeing...
Calceval.EvalError("Function application is not yet implemented", "{}", "\nApply\n  .func_expr:\n    Apply\n      .func_expr:\n        Apply\n          .func_expr:\n            Apply\n              .func_expr:\n                Apply\n                  .func_expr:\n                    Apply\n                      .func_expr:\n                        Apply\n                          .func_expr:\n                            Apply\n                              .func_expr:\n                                Apply\n                                  .func_expr:\n                                    Apply\n                                      .func_expr:\n                                        Varname(if)\n                                      .param_expr:\n                                        BoolExp(true)\n                                  .param_expr:\n                                    Varname(then)\n                              .param_expr:\n                                Varname(if)\n                          .param_expr:\n                            BoolExp(false)\n                      .param_expr:\n                        Varname(then)\n                  .param_expr:\n                    IntExp(1)\n              .param_expr:\n                Varname(else)\n          .param_expr:\n            IntExp(2)\n      .param_expr:\n        Varname(else)\n  .param_expr:\n    IntExp(3)\n")
calculon> if if true 
      then false 
      else true 
   then if false 
        then 1 
        else 2
   else if false 
        then 3 
        else 4;
ERROR: I'm not familiar with the type of thing I'm seeing...
Calceval.EvalError("Function application is not yet implemented", "{}", "\nApply\n  .func_expr:\n    Apply\n      .func_expr:\n        Apply\n          .func_expr:\n            Apply\n              .func_expr:\n                Apply\n                  .func_expr:\n                    Apply\n                      .func_expr:\n                        Apply\n                          .func_expr:\n                            Apply\n                              .func_expr:\n                                Apply\n                                  .func_expr:\n                                    Apply\n                                      .func_expr:\n                                        Apply\n                                          .func_expr:\n                                            Apply\n                                              .func_expr:\n                                                Apply\n                                                  .func_expr:\n                                                    Apply\n                                                      .func_expr:\n                                                        Apply\n                                                          .func_expr:\n                                                            Apply\n                                                              .func_expr:\n                                                                Apply\n                                                                  .func_expr:\n                                                                    Apply\n                                                                      .func_expr:\n                                                                        Apply\n                                                                          .func_expr:\n                                                                            Apply\n                                                                              .func_expr:\n                                                                                Varname(if)\n                                                                              .param_expr:\n                                                                                Varname(if)\n                                                                          .param_expr:\n                                                                            BoolExp(true)\n                                                                      .param_expr:\n                                                                        Varname(then)\n                                                                  .param_expr:\n                                                                    BoolExp(false)\n                                                              .param_expr:\n                                                                Varname(else)\n                                                          .param_expr:\n                                                            BoolExp(true)\n                                                      .param_expr:\n                                                        Varname(then)\n                                                  .param_expr:\n                                                    Varname(if)\n                                              .param_expr:\n                                                BoolExp(false)\n                                          .param_expr:\n                                            Varname(then)\n                                      .param_expr:\n                                        IntExp(1)\n                                  .param_expr:\n                                    Varname(else)\n                              .param_expr:\n                                IntExp(2)\n                          .param_expr:\n                            Varname(else)\n                      .param_expr:\n                        Varname(if)\n                  .param_expr:\n                    BoolExp(false)\n              .param_expr:\n                Varname(then)\n          .param_expr:\n            IntExp(3)\n      .param_expr:\n        Varname(else)\n  .param_expr:\n    IntExp(4)\n")
calculon> 
That was so terrible I think you gave me cancer!
